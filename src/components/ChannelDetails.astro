---
import { fetchTopChannels } from "../data/topChannelsFetch";
const results = await fetchTopChannels();

const { data } = Astro.props;
import ChannelHeader from "./channel/ChannelHeader.astro";
import ChannelStats from "./channel/ChannelStats.astro";
import ChannelEarnings from "./channel/ChannelEarnings.astro";
import ChannelAbout from "./channel/ChannelAbout.astro";

function formatNumber(n) {
  return new Intl.NumberFormat("en", {
    notation: "compact",
    compactDisplay: "short",
    maximumFractionDigits: 1,
  }).format(n);
}

const publishedDate = new Date(data.publishedAt).toLocaleDateString("en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
});

const topics =
  data.topicCategories?.map((url) => {
    const name = url.split("/").pop()?.replace(/_/g, " ") || "";
    return decodeURIComponent(name);
  }) || [];

const readableTopics =
  topics.length > 1
    ? topics.slice(0, -1).join(", ") + " & " + topics.slice(-1)
    : topics[0] || "Creator";

const countryFull = data.country || "US";
// 3. Convert country code to full name
const countryName = new Intl.DisplayNames(["en"], { type: "region" }).of(
  countryFull
);

// 4. Convert country code to flag emoji
function getFlagEmoji(code) {
  return code
    .toUpperCase()
    .replace(/./g, (char) => String.fromCodePoint(127397 + char.charCodeAt()));
}
const flag = getFlagEmoji(countryFull);

// Format function (e.g. "$1.2K")
function formatIncomeNumber(num) {
  const rounded = Math.round(num * 10) / 10; // round to 1 decimal place
  return Number.isInteger(rounded) ? rounded.toString() : rounded.toFixed(1);
}

function formatUSD(amount) {
  if (amount < 1000) {
    return "$" + amount.toString();
  } else if (amount < 1000000) {
    return (
      "$" +
      new Intl.NumberFormat("en", {
        maximumFractionDigits: 0,
      }).format(amount)
    );
  } else if (amount < 1000000000) {
    const millionAmount = amount / 1000000;
    return "$" + formatIncomeNumber(millionAmount) + " million";
  } else {
    const billionAmount = amount / 1000000000;
    return "$" + formatIncomeNumber(billionAmount) + " billion";
  }
}

const faqs = [
  {
    question: `How much does ${data.title} earn each month?`,
    answer: `The monthly income of ${data.title} depends on several factors, including ad revenue, viewer location, CPM rates, and sponsorship deals. Based on average views, the estimated monthly earnings are ${formatUSD(data.monthlyIncome)}.`,
  },
  {
    question: `What type of content does ${data.title} create?`,
    answer: `${data.title} focuses on content related to ${readableTopics}. The channel’s style and topics may evolve over time to keep things fresh and engaging for its audience.`,
  },
  {
    question: `Where is ${data.title} based?`,
    answer: `This channel is registered in ${countryName} and has a global reach, connecting with viewers from all around the world.`,
  },
  {
    question: `When was ${data.title} started on YouTube?`,
    answer: `${data.title} launched the channel on ${publishedDate} and has steadily grown since then.`,
  },
];
const faqSchema = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  mainEntity: faqs.map(({ question, answer }) => ({
    "@type": "Question",
    name: question,
    acceptedAnswer: {
      "@type": "Answer",
      text: answer,
    },
  })),
};
---

<ChannelHeader data={data} />

<!-- Stats Box -->
<ChannelStats data={data} />

<!-- Estimated Earnings -->
<ChannelEarnings data={data} />

<!-- About the Channel -->
<ChannelAbout data={data} />

<!-- 5. Channel Growth Paragraph -->
<section class="mx-auto mt-6 max-w-4xl rounded-xl bg-white p-6 shadow">
  <h2 class="text-xl font-semibold text-gray-800">Growth Overview</h2>
  <p
    class="mt-3 text-sm text-gray-700 leading-loose md:text-base md:leading-relaxed"
  >
    Since launching in {publishedDate}, <strong>{data.title}</strong> has grown steadily
    with {formatNumber(data.subscriberCount)} subscribers and {
      formatNumber(data.viewCount)
    } total views across {data.videoCount} videos. That’s an average of {
      formatNumber(data.viewCount / Math.max(data.videoCount, 1))
    } views per video — a strong engagement metric in the {readableTopics} niche.
  </p>
</section>

<!-- 6. Timeline Section -->
<section class="mx-auto mt-6 max-w-4xl rounded-xl bg-white p-6 shadow">
  <h2 class="text-xl font-semibold text-gray-800">Channel Timeline</h2>
  <ul
    class="mt-3 list-disc list-inside leading-loose text-sm text-gray-700 md:text-base md:leading-relaxed"
  >
    <li>🎬 Started: {publishedDate}</li>
    <li>📈 Subscribers: {formatNumber(data.subscriberCount)}</li>
    <li>📹 Videos uploaded: {data.videoCount}</li>
    <li>💰 Monthly income: {formatUSD(data.monthlyIncome)}</li>
    <li>🌍 Country: {countryName} ({flag})</li>
  </ul>
</section>

<!-- 8. Blog-Style Section -->
<section class="mx-auto mt-6 max-w-4xl rounded-xl bg-white p-6 shadow">
  <h2 class="text-xl font-semibold text-gray-800">
    Why {data.title} Is a Popular Channel in {readableTopics} on YouTube
  </h2>
  <p
    class="mt-3 text-sm leading-loose text-gray-700 md:text-base md:leading-relaxed"
  >
    {data.title} has gained popularity by creating content that truly connects with
    audiences interested in {readableTopics}. Its approach combines creativity,
    consistency, and a clear understanding of what viewers want in this space.
  </p>
  <p
    class="mt-3 text-sm leading-loose text-gray-700 md:text-base md:leading-relaxed"
  >
    Whether it’s through engaging storytelling, helpful information, or unique
    perspectives, {data.title} stands out among other channels covering {
      readableTopics
    }. This focus has helped build a loyal community and steady growth over
    time.
  </p>
</section>

<!-- FAQ Section -->
<section class="mx-auto mt-6 max-w-4xl rounded-xl bg-white p-6 shadow">
  <h2 class="mb-8 text-xl font-semibold text-gray-800">
    Frequently Asked Questions about {data.title}
  </h2>
  <div class="space-y-4" id="faq-accordion">
    {
      faqs.map((faq, i) => (
        <div class="border border-gray-200 rounded-lg shadow-sm bg-white">
          <button
            type="button"
            class="w-full flex justify-between items-center p-6 focus:outline-none"
            aria-expanded={i === 0 ? "true" : "false"}
            aria-controls={`faq-content-${i}`}
            id={`faq-header-${i}`}
          >
            <span class="text-left text-gray-800 font-semibold text-base md:text-lg">
              {faq.question}
            </span>
            <svg
              class={`w-5 h-5 text-gray-500 transition-transform duration-300 ${i === 0 ? "rotate-180" : ""}`}
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M19 9l-7 7-7-7"
              />
            </svg>
          </button>

          <div
            id={`faq-content-${i}`}
            role="region"
            aria-labelledby={`faq-header-${i}`}
            class="faq-answer-container overflow-hidden transition-all duration-300"
            style={`max-height: ${i === 0 ? "200px" : "0"}; padding: 0 1.5rem;`}
          >
            <div class="inner px-0 pb-4 text-gray-600">
              <p class="m-0 text-sm md:text-base">{faq.answer}</p>
            </div>
          </div>
        </div>
      ))
    }
  </div>
</section>

<!-- 10. Related Channels -->
<!-- <div class="mx-auto mt-6 max-w-4xl rounded-xl bg-white p-6 shadow">
  <h2 class="text-xl font-semibold text-gray-800">Explore More Channels</h2>
  <p class="mt-3 text-sm text-gray-700">
    Browse other popular creators by region or niche:
  </p>
  <p class="mt-2 text-sm text-gray-600">
    → <a
      href={`/top-channels/${countryFull.toLowerCase()}`}
      class="text-blue-600 underline">Top YouTubers from {countryName}</a
    ><br />
    → <a href="/top-channels" class="text-blue-600 underline"
      >Top-Earning Channels</a
    >
  </p>
</div> -->

<section class="mx-auto my-6 max-w-4xl rounded-xl bg-white p-6 shadow">
  <h3 class="text-xl font-semibold text-gray-800">Explore More Channels</h3>
  <p
    class="mt-3 text-sm leading-loose text-gray-700 md:text-base md:leading-relaxed"
  >
    Use our YouTube earnings tool to check estimated revenue of any channel —
    influencers, educators, vloggers, and more. Just search using a YouTube
    handle or channel ID to get started.
  </p>

  <!-- Grid of Channels -->
  <div class="grid grid-cols-2 mt-6 sm:grid-cols-4 md:grid-cols-5 gap-6">
    {
      results.map((channel, index) => (
        <a
          href={`/${channel.slug}`}
          class="flex flex-col items-center text-center hover:underline"
        >
          <img
            src={`/images/${channel.slug}.webp`}
            alt={`${channel.name} Profile`}
            width={80}
            height={80}
            class="w-20 h-20 rounded-full object-cover shadow-md"
            loading={index < 5 ? "eager" : "lazy"}
          />
          <span class="mt-2 font-medium text-gray-800">{channel.name}</span>
        </a>
      ))
    }
  </div>
  <!-- View More Button -->
  <div class="mt-8 text-center">
    <a
      href="/top-channels"
      class="inline-flex items-center gap-2 rounded-lg bg-tPrimary px-5 py-3 text-sm font-semibold text-white shadow-md transition hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-400 focus:ring-offset-2"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-5 w-5"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M9 5l7 7-7 7"></path>
      </svg>
      View More Channels
    </a>
  </div>
</section>

<script type="application/ld+json" set:html={JSON.stringify(faqSchema)} />

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const buttons = document.querySelectorAll("#faq-accordion button");

    buttons.forEach((button) => {
      button.addEventListener("click", () => {
        const content = document.getElementById(
          button.getAttribute("aria-controls")
        );
        const isExpanded = button.getAttribute("aria-expanded") === "true";

        // Close all
        buttons.forEach((btn) => {
          btn.setAttribute("aria-expanded", "false");
          const c = document.getElementById(btn.getAttribute("aria-controls"));
          c.style.maxHeight = "0";
          btn.querySelector("svg")?.classList.remove("rotate-180");
        });

        // Open clicked one if not already open
        if (!isExpanded) {
          button.setAttribute("aria-expanded", "true");
          content.style.maxHeight = content.scrollHeight + "px";
          button.querySelector("svg")?.classList.add("rotate-180");
        }
      });
    });

    // Set max-height for the first one manually on load
    const firstContent = document.getElementById("faq-content-0");
    if (firstContent) {
      firstContent.style.maxHeight = firstContent.scrollHeight + "px";
    }
  });
</script>
