---
import { Clock, ExternalLink } from "lucide-react";
import {
  getReadableTopics,
  formatNumber,
  formatUSD,
} from "../../utils/helper.js";

const KEYS_API = "https://api.youtubersincome.com/recent-channels";

const res = await fetch(KEYS_API);
const channels = await res.json();
---

<section class="py-12 sm:py-16 md:py-20 bg-white">
  <div class="container max-w-7xl mx-auto px-4 sm:px-6">
    <div class="text-center mb-8 sm:mb-10 md:mb-12">
      <div class="inline-flex items-center gap-2 mb-3 sm:mb-4">
        <Clock className="h-4 w-4 sm:h-5 sm:w-5 text-[#74520b]" />
        <span class="text-xs sm:text-sm font-medium text-[#74520b]">
          RECENTLY ANALYZED
        </span>
      </div>
      <h2 class="text-xl sm:text-2xl md:text-3xl font-bold mb-3 sm:mb-4 px-4">
        Recently Analyzed YouTube Channels
      </h2>
      <p class="text-sm sm:text-base text-slate-600 max-w-2xl mx-auto px-4">
        Discover the newest channels checked by our users, along with income
        estimates and detailed analytics across different niches
      </p>
    </div>

    {
      channels.length === 0 ? (
        <p class="text-center py-16 text-gray-500">
          No trending channels found.
        </p>
      ) : (
        <div class="max-w-5xl mx-auto shadow-xl border-1 bg-white rounded-xl border border-slate-200">
          <div class="p-0">
            <div class="divide-y divide-slate-100">
              {channels.map((channel, index) => (
                <a
                  href={`/${channel.handle.replace(/^@/, "")}-net-worth`}
                  class="block hover:bg-slate-50 transition-colors duration-200"
                >
                  <div class="flex items-center justify-between p-3 sm:p-4 md:p-6">
                    <div class="flex items-center gap-3 sm:gap-4 md:gap-6 flex-1 min-w-0">
                      <div class="relative flex-shrink-0">
                        <img
                          src={channel.thumbnail || "/placeholder.svg"}
                          alt={`${channel.title} avatar`}
                          width={40}
                          height={40}
                          class="w-10 h-10 sm:w-12 sm:h-12 md:w-14 md:h-14 rounded-full border-2 border-white shadow-md"
                        />
                        {true && (
                          <div class="absolute -bottom-0.5 -right-0.5 sm:-bottom-1 sm:-right-1 w-4 h-4 sm:w-5 sm:h-5 bg-blue-500 rounded-full flex items-center justify-center">
                            <svg
                              class="w-2.5 h-2.5 sm:w-3 sm:h-3 text-white"
                              fill="currentColor"
                              viewBox="0 0 20 20"
                            >
                              <path
                                fill-rule="evenodd"
                                d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                clip-rule="evenodd"
                              />
                            </svg>
                          </div>
                        )}
                      </div>

                      <div class="min-w-0 flex-1">
                        <div class="flex items-center gap-2 sm:gap-3 mb-1">
                          <h3 class="font-bold text-sm sm:text-base md:text-lg text-slate-900 truncate">
                            {channel.title}
                          </h3>
                          <ExternalLink className="h-3 w-3 sm:h-4 sm:w-4 text-slate-400 flex-shrink-0" />
                        </div>
                        <div class="flex flex-col sm:flex-row sm:items-center gap-1 sm:gap-3">
                          <span class="text-xs sm:text-sm text-slate-500 hidden sm:inline">
                            {channel.handle}
                          </span>
                          <div class="flex items-center gap-2 sm:gap-3">
                            <span class="inline-flex items-center justify-center rounded-md border border-slate-200 px-1.5 py-0.5 text-xs font-medium text-slate-700 bg-white">
                              {getReadableTopics(channel.topicCategories)}
                            </span>
                            <span class="text-xs sm:text-sm text-slate-500 hidden sm:inline">
                              {formatNumber(channel.subscriberCount)}{" "}
                              subscribers
                            </span>
                          </div>
                        </div>
                        <div class="sm:hidden mt-1">
                          <span class="text-xs text-slate-500">
                            {formatNumber(channel.subscriberCount)} subscribers
                          </span>
                        </div>
                      </div>
                    </div>

                    <div class="text-right flex-shrink-0 ml-2">
                      <div class="font-bold text-sm sm:text-base md:text-lg text-[#147B43]">
                        {formatUSD(channel.monthlyIncome)}
                      </div>
                      <div class="text-xs sm:text-sm text-slate-600">
                        per month
                      </div>
                    </div>
                  </div>
                </a>
              ))}
            </div>
          </div>
        </div>
      )
    }

    <div class="text-center mt-6 sm:mt-8">
      <a
        href="/top-youtube-channels"
        class="inline-flex items-center gap-2 px-4 md:px-6 py-2 md:py-3 bg-red-600 hover:bg-red-700 text-white rounded-lg font-semibold transition-colors duration-200 text-sm md:text-base"
      >
        View All Recent Channels
        <ExternalLink className="h-3 w-3 sm:h-4 sm:w-4" />
      </a>
    </div>
  </div>
</section>
